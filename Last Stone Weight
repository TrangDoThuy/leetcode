/*We have a collection of stones, each stone has a positive integer weight.

Each turn, we choose the two heaviest stones and smash them together.  Suppose the stones have weights x and y with x <= y.  The result of this smash is:

If x == y, both stones are totally destroyed;
If x != y, the stone of weight x is totally destroyed, and the stone of weight y has new weight y-x.
At the end, there is at most 1 stone left.  Return the weight of this stone (or 0 if there are no stones left.)
*/
class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        priority_queue<int> q;
        for(int s: stones)
            q.push(s);
        while (q.size()>=2){
            int a=q.top();
            q.pop();
            if(!q.empty()){
                int b=q.top();
                q.pop();
                if(a!=b)
                    q.push(abs(a-b));
            }
        }
        return q.empty()?0:q.top();
    }
};

/*
Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.

Example 1:

Input: [5,7]
Output: 4
Example 2:

Input: [0,1]
Output: 0
*/
class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        int count =0;
        //the most significant bit in both number
        while(m!=n){
            m>>=1; //right shifting (dividing by 2)
            n>>=1;
            count+=1;
        }
        return m<<=count;//left shifting (multiple by 2^count). If position of MSB //are different, then result is 0
    }
};
